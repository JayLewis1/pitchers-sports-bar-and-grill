{"version":3,"sources":["App.tsx","redux/actions/gallery/types.ts","redux/reducers/gallery/reducer.ts","redux/actions/application/types.ts","redux/reducers/application/reducer.ts","redux/reducers/index.ts","redux/store.ts","index.tsx"],"names":["Header","React","lazy","Home","Menus","Gallery","ScrollToTop","Contact","Footer","NotFound","connector","connect","state","toggle","application","fallback","id","src","alt","className","exact","path","component","TOGGLE_GALLERY","initialState","CONTACT_TOGGLE","rootReducer","combineReducers","gallery","action","type","payload","middleware","thunk","store","createStore","compose","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAIMA,EAASC,IAAMC,MAAK,kBAAO,gCAC1BC,EAAOF,IAAMC,MAAK,kBAAO,gCAC1BE,EAAQH,IAAMC,MAAK,kBAAO,gCAC1BG,EAAUJ,IAAMC,MAAK,kBAAO,gCAC5BI,EAAeL,IAAMC,MAAK,kBAAO,gCACjCK,EAAUN,IAAMC,MAAK,kBAAM,gCAC3BM,EAAUP,IAAMC,MAAK,kBAAO,gCAC5BO,EAAWR,IAAMC,MAAK,kBAAO,iCAkDpBQ,MAtCGC,aAJD,SAACC,GAAD,MAA8B,CAC7CC,OAAQD,EAAME,YAAYD,UAyCbH,EAjCf,YAAgC,IAAjBG,EAAgB,EAAhBA,OACb,OACE,cAAC,IAAD,UACE,cAAC,WAAD,CAAUE,SACV,qBAAKC,GAAG,oBAAR,SACE,iCACE,0CACA,mDACA,qBAAKC,IAAI,8BAA8BC,IAAI,qBAL/C,SASA,sBAAKC,UAAU,MAAf,UACE,cAACnB,EAAD,IACA,cAACM,EAAD,KAEa,IAAXO,GAAoB,cAACN,EAAD,IAGtB,eAAC,IAAD,WACM,cAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,IAAIC,UAAWnB,IAClC,cAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,SAASC,UAAWlB,IACvC,cAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,eAAeC,UAAWlB,IAC5C,cAAC,IAAD,CAAOiB,KAAK,WAAWC,UAAWjB,IAClC,cAAC,IAAD,CAAOiB,UAAWb,OAEtB,cAACD,EAAD,c,+BCtDKe,EAAiB,iBCExBC,EAAuB,CACzBX,QAAQ,GCHCY,EAAiB,iBCMxBD,EAA2B,CAC7BX,QAAQ,GCFCa,EAAeC,0BAAgB,CAC1CC,QHA4B,WAA2D,IAA1DhB,EAAyD,uDAAzCY,EAAcK,EAA2B,uCAC9EC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OAAOD,GACL,KAAKP,EACH,OAAO,2BACFX,GADL,IAEEC,OAAQkB,IAEZ,QACE,OAAOnB,IGTXE,YDGgC,WAAmE,IAAlEF,EAAiE,uDAA7CY,EAAcK,EAA+B,uCAC1FC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OAAOD,GACL,KAAKL,EACH,OAAO,2BACFb,GADL,IAEEC,OAAQkB,IAEZ,QACE,OAAOnB,MEZPoB,EAAa,CAACC,KAEPC,EAAQC,sBAAYT,EAJZ,GAIuCU,kBAAQC,8BAAoBC,kBAAe,WAAf,EAAmBN,MCD3GO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJQ,SAASC,eAAe,W","file":"static/js/main.8b6f2082.chunk.js","sourcesContent":["import React, { Suspense } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport { connect, ConnectedProps } from \"react-redux\";\n// Components\nconst Header = React.lazy(() =>  import(\"./components/Header\"));\nconst  Home = React.lazy(() =>  import(\"./routes/Home\"));\nconst Menus = React.lazy(() =>  import(\"./routes/Menus\"));\nconst Gallery = React.lazy(() =>  import(\"./routes/Gallery\"));\nconst ScrollToTop  = React.lazy(() =>  import(\"./components/ScrollToTop\"));\nconst Contact = React.lazy(() => import(\"./components/contact/Contact\"));\nconst Footer  = React.lazy(() =>  import(\"./components/Footer\"));\nconst NotFound = React.lazy(() =>  import(\"./routes/NotFound\"));\n\ninterface ApplicationProps {\n  application : {\n    toggle: boolean\n  }\n}\n\nconst mapState = (state:ApplicationProps ) => ({\n  toggle: state.application.toggle\n})\n\nconst connector = connect(mapState);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype Props = PropsFromRedux;\n\nfunction App({ toggle }:Props) {\n  return (\n    <Router>\n      <Suspense fallback={\n      <div id=\"loading-container\">\n        <span>\n          <h2>Pitchers</h2>\n          <p>Sports Bar & Grill</p> \n          <img src=\"/assets/spinner/loading.gif\" alt=\"Loading ...\"/>\n        </span>\n      </div>\n      }>\n      <div className=\"App\">\n        <Header />\n        <ScrollToTop /> \n        {\n          toggle === true &&  <Contact />\n        }\n      \n        <Switch>\n              <Route exact path=\"/\" component={Home} />\n             <Route exact path=\"/menus\" component={Menus} />\n            <Route exact path=\"/menus/:type\" component={Menus} />\n            <Route path=\"/gallery\" component={Gallery} />\n            <Route component={NotFound} />\n        </Switch>\n        <Footer />\n      </div>\n      </Suspense>\n    </Router>\n  );\n}\n\nexport default connector(App);\n","export const TOGGLE_GALLERY = \"TOGGLE_GALLERY\"\n\nexport interface Gallery {\n    toggle: boolean\n}\n\ninterface toggleGallery {\n  type:typeof TOGGLE_GALLERY,\n  payload: Gallery\n}\n\nexport type GalleryTypes = toggleGallery;","import { GalleryTypes, Gallery, TOGGLE_GALLERY } from \"../../actions/gallery/types\";\n\nconst initialState:Gallery = {\n    toggle: false\n}\n\nexport const galleryReducer = (state:Gallery = initialState, action: GalleryTypes  ) => {\n  const { type, payload } = action;\n\n  switch(type) {\n    case TOGGLE_GALLERY :\n      return {\n        ...state,\n        toggle: payload,\n      }\n    default:\n      return state;\n  }\n}","export const CONTACT_TOGGLE = \"CONTACT_TOGGLE\"\n\nexport interface Application {\n    toggle: boolean\n}\n\ninterface toggleContact {\n  type:typeof CONTACT_TOGGLE,\n  payload: Application\n}\n\nexport type ApplicationTypes = toggleContact;","import { \n  ApplicationTypes,\n  Application,\n  CONTACT_TOGGLE\n } from \"../../actions/application/types\";\n\nconst initialState:Application = {\n    toggle: false\n}\n\nexport const applicationReducer = (state:Application = initialState, action: ApplicationTypes  ) => {\n  const { type, payload } = action;\n\n  switch(type) {\n    case CONTACT_TOGGLE :\n      return {\n        ...state,\n        toggle: payload,\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\n\nimport { galleryReducer } from \"./gallery/reducer\";\nimport { applicationReducer } from \"./application/reducer\";\n\nexport const rootReducer =  combineReducers({\n  gallery: galleryReducer,\n  application: applicationReducer\n})\n\nexport type RootState = ReturnType<typeof rootReducer>","import { createElement } from \"react\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk]\n\nexport const store = createStore(rootReducer, initialState, compose(composeWithDevTools(applyMiddleware(...middleware))))\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\n// Redux \nimport { Provider } from \"react-redux\";\nimport {store} from \"./redux/store\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}