{"version":3,"sources":["App.tsx","redux/actions/types.ts","redux/reducers/gallery.ts","redux/reducers/index.ts","redux/store.ts","index.tsx"],"names":["Header","React","lazy","Home","Menus","Gallery","ScrollToTop","Footer","NotFound","App","fallback","className","exact","path","component","TOGGLE_GALLERY","initialState","toggle","rootReducer","combineReducers","gallery","state","action","type","payload","middleware","thunk","store","createStore","compose","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAGMA,EAASC,IAAMC,MAAK,kBAAO,gCAC1BC,EAAOF,IAAMC,MAAK,kBAAO,gCAC1BE,EAAQH,IAAMC,MAAK,kBAAO,gCAC1BG,EAAUJ,IAAMC,MAAK,kBAAO,gCAC5BI,EAAeL,IAAMC,MAAK,kBAAO,gCAEjCK,EAAUN,IAAMC,MAAK,kBAAO,gCAC5BM,EAAWP,IAAMC,MAAK,kBAAO,iCAwBpBO,MAtBf,WACE,OACE,cAAC,IAAD,UACE,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACA,sBAAKC,UAAU,MAAf,UACE,cAACX,EAAD,IACA,cAACM,EAAD,IAEA,eAAC,IAAD,WACM,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,IAAIC,UAAWX,IAClC,cAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,SAASC,UAAWV,IACvC,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,eAAeC,UAAWV,IAC5C,cAAC,IAAD,CAAOS,KAAK,WAAWC,UAAWT,IAClC,cAAC,IAAD,CAAOS,UAAWN,OAEtB,cAACD,EAAD,Y,uCC3BKQ,EAAiB,iBCExBC,EAAuB,CACzBC,QAAQ,GCCCC,EAAeC,0BAAgB,CAC1CC,QDC4B,WAA2D,IAA1DC,EAAyD,uDAAzCL,EAAcM,EAA2B,uCAC9EC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OAAOD,GACL,KAAKR,EACH,OAAO,2BACFM,GADL,IAEEJ,OAAQO,IAEZ,QACE,OAAOH,MERPI,EAAa,CAACC,KAEPC,EAAQC,sBAAYV,EAJZ,GAIuCW,kBAAQC,8BAAoBC,kBAAe,WAAf,EAAmBN,MCD3GO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJQ,SAASC,eAAe,W","file":"static/js/main.00aeea49.chunk.js","sourcesContent":["import React, { Suspense } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\n// Components\nconst Header = React.lazy(() =>  import(\"./components/Header\"));\nconst  Home = React.lazy(() =>  import(\"./routes/Home\"));\nconst Menus = React.lazy(() =>  import(\"./routes/Menus\"));\nconst Gallery = React.lazy(() =>  import(\"./routes/Gallery\"));\nconst ScrollToTop  = React.lazy(() =>  import(\"./components/ScrollToTop\"));\nconst Contact = React.lazy(() => import(\"./components/contact/Contact\"));\nconst Footer  = React.lazy(() =>  import(\"./components/Footer\"));\nconst NotFound = React.lazy(() =>  import(\"./routes/NotFound\"));\n\nfunction App() {\n  return (\n    <Router>\n      <Suspense fallback={<div>Loading...</div>}>\n      <div className=\"App\">\n        <Header />\n        <ScrollToTop />\n        {/* <Contact /> */}\n        <Switch>\n              <Route exact path=\"/\" component={Home} />\n             <Route exact path=\"/menus\" component={Menus} />\n            <Route exact path=\"/menus/:type\" component={Menus} />\n            <Route path=\"/gallery\" component={Gallery} />\n            <Route component={NotFound} />\n        </Switch>\n        <Footer />\n      </div>\n      </Suspense>\n    </Router>\n  );\n}\n\nexport default App;\n","export const TOGGLE_GALLERY = \"TOGGLE_GALLERY\"\n\nexport interface Gallery {\n    toggle: boolean\n}\n\ninterface toggleGallery {\n  type:typeof TOGGLE_GALLERY,\n  payload: Gallery\n}\n\nexport type GalleryTypes = toggleGallery;","import { GalleryTypes, Gallery, TOGGLE_GALLERY } from \"../actions/types\";\n\nconst initialState:Gallery = {\n    toggle: false\n}\n\nexport const galleryReducer = (state:Gallery = initialState, action: GalleryTypes  ) => {\n  const { type, payload } = action;\n\n  switch(type) {\n    case TOGGLE_GALLERY :\n      return {\n        ...state,\n        toggle: payload,\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\n\nimport { galleryReducer } from \"./gallery\";\n\nexport const rootReducer =  combineReducers({\n  gallery: galleryReducer\n})\n\nexport type RootState = ReturnType<typeof rootReducer>","import { createElement } from \"react\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk]\n\nexport const store = createStore(rootReducer, initialState, compose(composeWithDevTools(applyMiddleware(...middleware))))\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\n// Redux \nimport { Provider } from \"react-redux\";\nimport {store} from \"./redux/store\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}