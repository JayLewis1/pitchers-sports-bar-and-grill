{"ast":null,"code":"var _jsxFileName = \"/Users/jay/Desktop/Current Projects/pitchers-proto/web/src/components/home/GalleryPopup.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; //Redux\n\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapState = state => ({\n  gallery: state.gallery\n});\n\nconst mapDispatch = {\n  toggleGallery: payload => ({\n    type: \"TOGGLE_GALLERY\",\n    payload: payload\n  })\n};\nconst connector = connect(mapState, mapDispatch);\n\nconst GalleryPopup = ({\n  index,\n  toggleGallery,\n  from\n}) => {\n  _s();\n\n  const [imgIndex, setImgIndex] = useState(index);\n\n  const changeImgLeft = () => {\n    let newIndex = imgIndex - 1;\n\n    if (newIndex < 1) {\n      newIndex = 5;\n      setImgIndex(newIndex);\n    } else {\n      setImgIndex(newIndex);\n    }\n  };\n\n  const changeImgRight = () => {\n    let newIndex = imgIndex + 1;\n\n    if (newIndex > 5) {\n      newIndex = 1;\n      setImgIndex(newIndex);\n    } else {\n      setImgIndex(newIndex);\n    }\n  };\n\n  const exitGallery = () => {\n    console.log(\"exit gallery\");\n    toggleGallery(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery-popup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-wrapper\",\n      children: [from === \"home\" && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/assets/photos/g${imgIndex}@2x.jpg`,\n        alt: \"Gallery Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 33\n      }, this), from === \"gallery\" && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/assets/gallery/p${imgIndex}@2x.jpg`,\n        alt: \"Gallery Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"button-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeImgLeft(),\n          children: \"left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => exitGallery(),\n          className: \"exit-btn\",\n          children: \"exit gallery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeImgRight(),\n          children: \"right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GalleryPopup, \"pc+qzomBNoddeWaAzqZGkxVImKU=\");\n\n_c = GalleryPopup;\nexport default _c2 = connector(GalleryPopup);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GalleryPopup\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/jay/Desktop/Current Projects/pitchers-proto/web/src/components/home/GalleryPopup.tsx"],"names":["React","useState","connect","mapState","state","gallery","mapDispatch","toggleGallery","payload","type","connector","GalleryPopup","index","from","imgIndex","setImgIndex","changeImgLeft","newIndex","changeImgRight","exitGallery","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,SAASC,OAAT,QAAwC,aAAxC;;;AAQA,MAAMC,QAAQ,GAAIC,KAAD,KAA4B;AAC3CC,EAAAA,OAAO,EAAED,KAAK,CAACC;AAD4B,CAA5B,CAAjB;;AAIA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,aAAa,EAAIC,OAAD,KAAuB;AAACC,IAAAA,IAAI,EAAE,gBAAP;AAAyBD,IAAAA,OAAO,EAAEA;AAAlC,GAAvB;AADE,CAApB;AAIA,MAAME,SAAS,GAAGR,OAAO,CAACC,QAAD,EAAWG,WAAX,CAAzB;;AAQA,MAAMK,YAAY,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQL,EAAAA,aAAR;AAAsBM,EAAAA;AAAtB,CAAD,KAAyC;AAAA;;AAC5D,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAACW,KAAD,CAAxC;;AAEA,QAAMI,aAAa,GAAG,MAAM;AAC1B,QAAIC,QAAQ,GAAGH,QAAQ,GAAG,CAA1B;;AACA,QAAGG,QAAQ,GAAG,CAAd,EAAiB;AACfA,MAAAA,QAAQ,GAAG,CAAX;AACAF,MAAAA,WAAW,CAACE,QAAD,CAAX;AACD,KAHD,MAGO;AACLF,MAAAA,WAAW,CAACE,QAAD,CAAX;AACD;AACF,GARD;;AASA,QAAMC,cAAc,GAAG,MAAM;AAC3B,QAAID,QAAQ,GAAGH,QAAQ,GAAG,CAA1B;;AACA,QAAGG,QAAQ,GAAG,CAAd,EAAiB;AACfA,MAAAA,QAAQ,GAAG,CAAX;AACAF,MAAAA,WAAW,CAACE,QAAD,CAAX;AACD,KAHD,MAGO;AACLF,MAAAA,WAAW,CAACE,QAAD,CAAX;AACD;AACF,GARD;;AASA,QAAME,WAAW,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAd,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,iBACIM,IAAI,KAAK,MAAT,iBAAoB;AAAK,QAAA,GAAG,EAAG,mBAAkBC,QAAS,SAAtC;AAAgD,QAAA,GAAG,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,cADxB,EAEID,IAAI,KAAK,SAAT,iBAAsB;AAAK,QAAA,GAAG,EAAG,oBAAmBC,QAAS,SAAvC;AAAiD,QAAA,GAAG,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,cAF1B,eAGI;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAE,MAAME,aAAa,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAE,MAAMG,WAAW,EAAlC;AAAsC,UAAA,SAAS,EAAC,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,OAAO,EAAE,MAAMD,cAAc,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAvCD;;GAAMP,Y;;KAAAA,Y;AAwCN,qBAAeD,SAAS,CAACC,YAAD,CAAxB","sourcesContent":["import React, { useState } from 'react'\n//Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n\ninterface ComponentProps {\n  gallery: {\n    toggle: boolean\n  }\n}\n\nconst mapState = (state:ComponentProps ) => ({\n  gallery: state.gallery\n})\n\nconst mapDispatch = {\n  toggleGallery : (payload: boolean) => ({type: \"TOGGLE_GALLERY\", payload: payload})\n}\n\nconst connector = connect(mapState, mapDispatch)\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux & {\n  index : number \n  from: string\n}\n\nconst GalleryPopup = ({index, toggleGallery,from }:Props ) => {\n  const [imgIndex, setImgIndex] = useState(index);\n\n  const changeImgLeft = () => {\n    let newIndex = imgIndex - 1;\n    if(newIndex < 1) {\n      newIndex = 5;\n      setImgIndex(newIndex);\n    } else {\n      setImgIndex(newIndex);\n    }\n  }\n  const changeImgRight = () => {\n    let newIndex = imgIndex + 1;\n    if(newIndex > 5) {\n      newIndex = 1;\n      setImgIndex(newIndex);\n    } else {\n      setImgIndex(newIndex);\n    }\n  }\n  const exitGallery = () => {\n    console.log(\"exit gallery\");\n    toggleGallery(false)\n  }\n\n  return (\n    <div className=\"gallery-popup\">\n        <div className=\"img-wrapper\">\n          { from === \"home\" &&  <img src={`/assets/photos/g${imgIndex}@2x.jpg`} alt=\"Gallery Item\"/>}\n          { from === \"gallery\" && <img src={`/assets/gallery/p${imgIndex}@2x.jpg`} alt=\"Gallery Item\"/>}\n            <span className=\"button-wrapper\">\n              <button onClick={() => changeImgLeft()}>left</button>\n              <button onClick={() => exitGallery()} className=\"exit-btn\">exit gallery</button>\n              <button onClick={() => changeImgRight()}>right</button>\n            </span>\n        </div>\n    </div>\n  )\n}\nexport default connector(GalleryPopup);"]},"metadata":{},"sourceType":"module"}